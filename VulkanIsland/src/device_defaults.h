#pragma once

#include "instance.h"

VkPhysicalDeviceFeatures constexpr kDEVICE_FEATURES{
    VkBool32(0), // robustBufferAccess,
    VkBool32(0), // fullDrawIndexUint32,
    VkBool32(0), // imageCubeArray,
    VkBool32(0), // independentBlend,
    VkBool32(1), // geometryShader,
    VkBool32(1), // tessellationShader,
    VkBool32(0), // sampleRateShading,
    VkBool32(0), // dualSrcBlend,
    VkBool32(0), // logicOp,
    VkBool32(1), // multiDrawIndirect,
    VkBool32(0), // drawIndirectFirstInstance,
    VkBool32(1), // depthClamp,
    VkBool32(0), // depthBiasClamp,
    VkBool32(1), // fillModeNonSolid,
    VkBool32(0), // depthBounds,
    VkBool32(0), // wideLines,
    VkBool32(0), // largePoints,
    VkBool32(0), // alphaToOne,
    VkBool32(0), // multiViewport,
    VkBool32(0), // samplerAnisotropy,
    VkBool32(0), // textureCompressionETC2,
    VkBool32(0), // textureCompressionASTC_LDR,
    VkBool32(0), // textureCompressionBC,
    VkBool32(0), // occlusionQueryPrecise,
    VkBool32(0), // pipelineStatisticsQuery,
    VkBool32(0), // vertexPipelineStoresAndAtomics,
    VkBool32(0), // fragmentStoresAndAtomics,
    VkBool32(0), // shaderTessellationAndGeometryPointSize,
    VkBool32(0), // shaderImageGatherExtended,
    VkBool32(0), // shaderStorageImageExtendedFormats,
    VkBool32(0), // shaderStorageImageMultisample,
    VkBool32(0), // shaderStorageImageReadWithoutFormat,
    VkBool32(0), // shaderStorageImageWriteWithoutFormat,
    VkBool32(1), // shaderUniformBufferArrayDynamicIndexing,
    VkBool32(1), // shaderSampledImageArrayDynamicIndexing,
    VkBool32(1), // shaderStorageBufferArrayDynamicIndexing,
    VkBool32(1), // shaderStorageImageArrayDynamicIndexing,
    VkBool32(0), // shaderClipDistance,
    VkBool32(0), // shaderCullDistance,
    VkBool32(0), // shaderFloat64,
    VkBool32(0), // shaderInt64,
    VkBool32(0), // shaderInt16,
    VkBool32(0), // shaderResourceResidency,
    VkBool32(0), // shaderResourceMinLod,
    VkBool32(0), // sparseBinding,
    VkBool32(0), // sparseResidencyBuffer,
    VkBool32(0), // sparseResidencyImage2D,
    VkBool32(0), // sparseResidencyImage3D,
    VkBool32(0), // sparseResidency2Samples,
    VkBool32(0), // sparseResidency4Samples,
    VkBool32(0), // sparseResidency8Samples,
    VkBool32(0), // sparseResidency16Samples,
    VkBool32(0), // sparseResidencyAliased,
    VkBool32(0), // variableMultisampleRate,
    VkBool32(0), // inheritedQueries
};